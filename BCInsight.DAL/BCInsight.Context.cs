//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BCInsight.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Vendor_bcInsightEntities : DbContext
    {
        public Vendor_bcInsightEntities()
            : base("name=Vendor_bcInsightEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<TblAdminLog> TblAdminLogs { get; set; }
        public virtual DbSet<tblAdminUser> tblAdminUsers { get; set; }
        public virtual DbSet<TblApiLog> TblApiLogs { get; set; }
        public virtual DbSet<tblAttendance> tblAttendances { get; set; }
        public virtual DbSet<tblbaseqty> tblbaseqties { get; set; }
        public virtual DbSet<tblBrand> tblBrands { get; set; }
        public virtual DbSet<tblColor> tblColors { get; set; }
        public virtual DbSet<tblDepartment> tblDepartments { get; set; }
        public virtual DbSet<tblDesignation> tblDesignations { get; set; }
        public virtual DbSet<tblDivision> tblDivisions { get; set; }
        public virtual DbSet<TblLog> TblLogs { get; set; }
        public virtual DbSet<tblMultiBrandIncentiveRule> tblMultiBrandIncentiveRules { get; set; }
        public virtual DbSet<tblNotification> tblNotifications { get; set; }
        public virtual DbSet<tblPvtLabelGroup> tblPvtLabelGroups { get; set; }
        public virtual DbSet<tblPvtLabelName> tblPvtLabelNames { get; set; }
        public virtual DbSet<tblPvtLabelSlab> tblPvtLabelSlabs { get; set; }
        public virtual DbSet<tblQuarter> tblQuarters { get; set; }
        public virtual DbSet<tblsale> tblsales { get; set; }
        public virtual DbSet<tblSection> tblSections { get; set; }
        public virtual DbSet<tblSite> tblSites { get; set; }
        public virtual DbSet<tblSiteSetting> tblSiteSettings { get; set; }
        public virtual DbSet<tblSize> tblSizes { get; set; }
        public virtual DbSet<tblSlab> tblSlabs { get; set; }
        public virtual DbSet<tblstock> tblstocks { get; set; }
        public virtual DbSet<tblUser> tblUsers { get; set; }
        public virtual DbSet<tblVendor> tblVendors { get; set; }
        public virtual DbSet<tblVendorBrand> tblVendorBrands { get; set; }
        public virtual DbSet<tblVendorLoginHistory> tblVendorLoginHistories { get; set; }
        public virtual DbSet<tblVendorsalesperson> tblVendorsalespersons { get; set; }
        public virtual DbSet<tblWeeklytargetincentive> tblWeeklytargetincentives { get; set; }
        public virtual DbSet<tblWeekMaster> tblWeekMasters { get; set; }
    
        public virtual ObjectResult<gethighestbillofthedayReport_Result> gethighestbillofthedayReport(Nullable<System.DateTime> saledate)
        {
            var saledateParameter = saledate.HasValue ?
                new ObjectParameter("Saledate", saledate) :
                new ObjectParameter("Saledate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<gethighestbillofthedayReport_Result>("gethighestbillofthedayReport", saledateParameter);
        }
    
        public virtual ObjectResult<GetNotificationDetails_Result> GetNotificationDetails(Nullable<int> notificationId)
        {
            var notificationIdParameter = notificationId.HasValue ?
                new ObjectParameter("notificationId", notificationId) :
                new ObjectParameter("notificationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNotificationDetails_Result>("GetNotificationDetails", notificationIdParameter);
        }
    
        public virtual ObjectResult<GetNotificationDetailsbyId_Result> GetNotificationDetailsbyId(Nullable<int> notificationId)
        {
            var notificationIdParameter = notificationId.HasValue ?
                new ObjectParameter("notificationId", notificationId) :
                new ObjectParameter("notificationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNotificationDetailsbyId_Result>("GetNotificationDetailsbyId", notificationIdParameter);
        }
    
        public virtual ObjectResult<GetNotificationFilterDetails_Result> GetNotificationFilterDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNotificationFilterDetails_Result>("GetNotificationFilterDetails");
        }
    
        public virtual ObjectResult<GetNotificationFilterDetails2_Result> GetNotificationFilterDetails2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNotificationFilterDetails2_Result>("GetNotificationFilterDetails2");
        }
    
        public virtual ObjectResult<GetprivatelabelDetails_Result> GetprivatelabelDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetprivatelabelDetails_Result>("GetprivatelabelDetails");
        }
    
        public virtual ObjectResult<GetprivatelabelSlabDetails_Result> GetprivatelabelSlabDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetprivatelabelSlabDetails_Result>("GetprivatelabelSlabDetails");
        }
    
        public virtual ObjectResult<GetprivatelabelSlabDetails2_Result> GetprivatelabelSlabDetails2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetprivatelabelSlabDetails2_Result>("GetprivatelabelSlabDetails2");
        }
    
        public virtual int GetprivatelabelSlabExport(string finYear)
        {
            var finYearParameter = finYear != null ?
                new ObjectParameter("FinYear", finYear) :
                new ObjectParameter("FinYear", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetprivatelabelSlabExport", finYearParameter);
        }
    
        public virtual ObjectResult<GetprivatelabelSlabExport2_Result> GetprivatelabelSlabExport2(string finYear)
        {
            var finYearParameter = finYear != null ?
                new ObjectParameter("FinYear", finYear) :
                new ObjectParameter("FinYear", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetprivatelabelSlabExport2_Result>("GetprivatelabelSlabExport2", finYearParameter);
        }
    
        public virtual int GetprivatelabelSlabReport(string finyear, string qtrNo)
        {
            var finyearParameter = finyear != null ?
                new ObjectParameter("finyear", finyear) :
                new ObjectParameter("finyear", typeof(string));
    
            var qtrNoParameter = qtrNo != null ?
                new ObjectParameter("qtrNo", qtrNo) :
                new ObjectParameter("qtrNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetprivatelabelSlabReport", finyearParameter, qtrNoParameter);
        }
    
        public virtual ObjectResult<GetprivatelabelSlabReport2_Result> GetprivatelabelSlabReport2(string finyear, string qtrNo)
        {
            var finyearParameter = finyear != null ?
                new ObjectParameter("finyear", finyear) :
                new ObjectParameter("finyear", typeof(string));
    
            var qtrNoParameter = qtrNo != null ?
                new ObjectParameter("qtrNo", qtrNo) :
                new ObjectParameter("qtrNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetprivatelabelSlabReport2_Result>("GetprivatelabelSlabReport2", finyearParameter, qtrNoParameter);
        }
    
        public virtual ObjectResult<SP_BaseQtySiteReport_Result> SP_BaseQtySiteReport()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_BaseQtySiteReport_Result>("SP_BaseQtySiteReport");
        }
    
        public virtual ObjectResult<SP_BaseQtySiterpt_Result> SP_BaseQtySiterpt()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_BaseQtySiterpt_Result>("SP_BaseQtySiterpt");
        }
    
        public virtual ObjectResult<SP_DailyProductPerformance_Result> SP_DailyProductPerformance(Nullable<System.DateTime> saledate)
        {
            var saledateParameter = saledate.HasValue ?
                new ObjectParameter("Saledate", saledate) :
                new ObjectParameter("Saledate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DailyProductPerformance_Result>("SP_DailyProductPerformance", saledateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_DasboardStockUpdatechart(Nullable<System.DateTime> stockdate)
        {
            var stockdateParameter = stockdate.HasValue ?
                new ObjectParameter("Stockdate", stockdate) :
                new ObjectParameter("Stockdate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_DasboardStockUpdatechart", stockdateParameter);
        }
    
        public virtual ObjectResult<SP_dashboard_Result> SP_dashboard()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_dashboard_Result>("SP_dashboard");
        }
    
        public virtual ObjectResult<SP_GetAllStockDetails_Result> SP_GetAllStockDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetAllStockDetails_Result>("SP_GetAllStockDetails");
        }
    
        public virtual ObjectResult<SP_GetAppNotificationAPI_Result> SP_GetAppNotificationAPI(string sitecuid)
        {
            var sitecuidParameter = sitecuid != null ?
                new ObjectParameter("sitecuid", sitecuid) :
                new ObjectParameter("sitecuid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetAppNotificationAPI_Result>("SP_GetAppNotificationAPI", sitecuidParameter);
        }
    
        public virtual ObjectResult<SP_GetAppNotificationMOMAPI_Result> SP_GetAppNotificationMOMAPI(string sitecuid)
        {
            var sitecuidParameter = sitecuid != null ?
                new ObjectParameter("sitecuid", sitecuid) :
                new ObjectParameter("sitecuid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetAppNotificationMOMAPI_Result>("SP_GetAppNotificationMOMAPI", sitecuidParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> SP_getDailySale(Nullable<System.DateTime> saledate)
        {
            var saledateParameter = saledate.HasValue ?
                new ObjectParameter("Saledate", saledate) :
                new ObjectParameter("Saledate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("SP_getDailySale", saledateParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> SP_getDailySalecountCHart(Nullable<System.DateTime> saledate)
        {
            var saledateParameter = saledate.HasValue ?
                new ObjectParameter("Saledate", saledate) :
                new ObjectParameter("Saledate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("SP_getDailySalecountCHart", saledateParameter);
        }
    
        public virtual ObjectResult<SP_GetDailySaleforCurrentweek_Result> SP_GetDailySaleforCurrentweek(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetDailySaleforCurrentweek_Result>("SP_GetDailySaleforCurrentweek", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<SP_Getdailysalescont_Result> SP_Getdailysalescont()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Getdailysalescont_Result>("SP_Getdailysalescont");
        }
    
        public virtual ObjectResult<SP_Getdailysalescontchart_Result> SP_Getdailysalescontchart()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Getdailysalescontchart_Result>("SP_Getdailysalescontchart");
        }
    
        public virtual ObjectResult<SP_getDailyturnAPI_Result> SP_getDailyturnAPI(Nullable<int> salepersonNo, string sitecuid)
        {
            var salepersonNoParameter = salepersonNo.HasValue ?
                new ObjectParameter("salepersonNo", salepersonNo) :
                new ObjectParameter("salepersonNo", typeof(int));
    
            var sitecuidParameter = sitecuid != null ?
                new ObjectParameter("sitecuid", sitecuid) :
                new ObjectParameter("sitecuid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_getDailyturnAPI_Result>("SP_getDailyturnAPI", salepersonNoParameter, sitecuidParameter);
        }
    
        public virtual ObjectResult<Sp_GetDashboardSale_Result> Sp_GetDashboardSale(Nullable<System.DateTime> fromDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetDashboardSale_Result>("Sp_GetDashboardSale", fromDateParameter);
        }
    
        public virtual ObjectResult<SP_GetHighestBillOfTheDay_Result> SP_GetHighestBillOfTheDay()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetHighestBillOfTheDay_Result>("SP_GetHighestBillOfTheDay");
        }
    
        public virtual ObjectResult<SP_GetHighestSellingAmountOfTheDay_Result> SP_GetHighestSellingAmountOfTheDay()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetHighestSellingAmountOfTheDay_Result>("SP_GetHighestSellingAmountOfTheDay");
        }
    
        public virtual ObjectResult<SP_GetHighestSellOfThemonthDepartmentwise_Result> SP_GetHighestSellOfThemonthDepartmentwise()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetHighestSellOfThemonthDepartmentwise_Result>("SP_GetHighestSellOfThemonthDepartmentwise");
        }
    
        public virtual ObjectResult<SP_GetManofmonthAPI_Result> SP_GetManofmonthAPI(Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate)
        {
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetManofmonthAPI_Result>("SP_GetManofmonthAPI", startdateParameter, enddateParameter);
        }
    
        public virtual ObjectResult<SP_getManOfthDayAPI_Result> SP_getManOfthDayAPI()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_getManOfthDayAPI_Result>("SP_getManOfthDayAPI");
        }
    
        public virtual ObjectResult<Nullable<int>> SP_getMonthlySale(Nullable<System.DateTime> saleStartdate, Nullable<System.DateTime> saleEnddate)
        {
            var saleStartdateParameter = saleStartdate.HasValue ?
                new ObjectParameter("SaleStartdate", saleStartdate) :
                new ObjectParameter("SaleStartdate", typeof(System.DateTime));
    
            var saleEnddateParameter = saleEnddate.HasValue ?
                new ObjectParameter("SaleEnddate", saleEnddate) :
                new ObjectParameter("SaleEnddate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_getMonthlySale", saleStartdateParameter, saleEnddateParameter);
        }
    
        public virtual ObjectResult<SP_GetMonthlysalescont_Result> SP_GetMonthlysalescont(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetMonthlysalescont_Result>("SP_GetMonthlysalescont", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_GetMonthlystockupdate(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_GetMonthlystockupdate", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<SP_Getpspfddetailreportmonth_Result> SP_Getpspfddetailreportmonth(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Getpspfddetailreportmonth_Result>("SP_Getpspfddetailreportmonth", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<SP_GetPvtLabelGroupDetailsInfo_Result> SP_GetPvtLabelGroupDetailsInfo(Nullable<int> groupId)
        {
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("GroupId", groupId) :
                new ObjectParameter("GroupId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetPvtLabelGroupDetailsInfo_Result>("SP_GetPvtLabelGroupDetailsInfo", groupIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_GetPvtLabelsalesamount(string departMent, string brandName, string product, Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate)
        {
            var departMentParameter = departMent != null ?
                new ObjectParameter("DepartMent", departMent) :
                new ObjectParameter("DepartMent", typeof(string));
    
            var brandNameParameter = brandName != null ?
                new ObjectParameter("BrandName", brandName) :
                new ObjectParameter("BrandName", typeof(string));
    
            var productParameter = product != null ?
                new ObjectParameter("Product", product) :
                new ObjectParameter("Product", typeof(string));
    
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_GetPvtLabelsalesamount", departMentParameter, brandNameParameter, productParameter, startdateParameter, enddateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_getsaledetailbyperson(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string salePersonNo)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            var salePersonNoParameter = salePersonNo != null ?
                new ObjectParameter("SalePersonNo", salePersonNo) :
                new ObjectParameter("SalePersonNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_getsaledetailbyperson", startDateParameter, endDateParameter, salePersonNoParameter);
        }
    
        public virtual ObjectResult<SP_getsalepersonbrandwisesaleAPI_Result> SP_getsalepersonbrandwisesaleAPI(Nullable<int> salepersonNo, Nullable<System.DateTime> saledate)
        {
            var salepersonNoParameter = salepersonNo.HasValue ?
                new ObjectParameter("salepersonNo", salepersonNo) :
                new ObjectParameter("salepersonNo", typeof(int));
    
            var saledateParameter = saledate.HasValue ?
                new ObjectParameter("saledate", saledate) :
                new ObjectParameter("saledate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_getsalepersonbrandwisesaleAPI_Result>("SP_getsalepersonbrandwisesaleAPI", salepersonNoParameter, saledateParameter);
        }
    
        public virtual ObjectResult<SP_GetSaleUpdateDailyCW_Result> SP_GetSaleUpdateDailyCW(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetSaleUpdateDailyCW_Result>("SP_GetSaleUpdateDailyCW", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<SP_GetSitePerformanceYearly_Result> SP_GetSitePerformanceYearly(Nullable<System.DateTime> startDate, Nullable<System.DateTime> enddate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("Enddate", enddate) :
                new ObjectParameter("Enddate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetSitePerformanceYearly_Result>("SP_GetSitePerformanceYearly", startDateParameter, enddateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_getstockqty(Nullable<int> siteID, Nullable<int> divId, Nullable<int> secId, Nullable<int> depId, Nullable<int> brandId, Nullable<int> colorId, Nullable<int> sizeId)
        {
            var siteIDParameter = siteID.HasValue ?
                new ObjectParameter("siteID", siteID) :
                new ObjectParameter("siteID", typeof(int));
    
            var divIdParameter = divId.HasValue ?
                new ObjectParameter("DivId", divId) :
                new ObjectParameter("DivId", typeof(int));
    
            var secIdParameter = secId.HasValue ?
                new ObjectParameter("SecId", secId) :
                new ObjectParameter("SecId", typeof(int));
    
            var depIdParameter = depId.HasValue ?
                new ObjectParameter("DepId", depId) :
                new ObjectParameter("DepId", typeof(int));
    
            var brandIdParameter = brandId.HasValue ?
                new ObjectParameter("BrandId", brandId) :
                new ObjectParameter("BrandId", typeof(int));
    
            var colorIdParameter = colorId.HasValue ?
                new ObjectParameter("ColorId", colorId) :
                new ObjectParameter("ColorId", typeof(int));
    
            var sizeIdParameter = sizeId.HasValue ?
                new ObjectParameter("SizeId", sizeId) :
                new ObjectParameter("SizeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_getstockqty", siteIDParameter, divIdParameter, secIdParameter, depIdParameter, brandIdParameter, colorIdParameter, sizeIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_GetTodaysstockupdate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_GetTodaysstockupdate");
        }
    
        public virtual ObjectResult<Nullable<int>> SP_GetTodaysstockupdateChartdaily()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_GetTodaysstockupdateChartdaily");
        }
    
        public virtual ObjectResult<SP_GetTopBrandSaleChart_Result> SP_GetTopBrandSaleChart(Nullable<System.DateTime> startDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetTopBrandSaleChart_Result>("SP_GetTopBrandSaleChart", startDateParameter);
        }
    
        public virtual ObjectResult<SP_GetTopBrandSaledetailsChart_Result> SP_GetTopBrandSaledetailsChart(Nullable<System.DateTime> startDate, string brandName)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var brandNameParameter = brandName != null ?
                new ObjectParameter("BrandName", brandName) :
                new ObjectParameter("BrandName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetTopBrandSaledetailsChart_Result>("SP_GetTopBrandSaledetailsChart", startDateParameter, brandNameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_GetTopPvtLabelGroup()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_GetTopPvtLabelGroup");
        }
    
        public virtual ObjectResult<Nullable<int>> SP_GetTopPvtLabelsalesDetails(string departMent, string brandName, string product, Nullable<System.DateTime> saleDate)
        {
            var departMentParameter = departMent != null ?
                new ObjectParameter("DepartMent", departMent) :
                new ObjectParameter("DepartMent", typeof(string));
    
            var brandNameParameter = brandName != null ?
                new ObjectParameter("BrandName", brandName) :
                new ObjectParameter("BrandName", typeof(string));
    
            var productParameter = product != null ?
                new ObjectParameter("Product", product) :
                new ObjectParameter("Product", typeof(string));
    
            var saleDateParameter = saleDate.HasValue ?
                new ObjectParameter("SaleDate", saleDate) :
                new ObjectParameter("SaleDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_GetTopPvtLabelsalesDetails", departMentParameter, brandNameParameter, productParameter, saleDateParameter);
        }
    
        public virtual ObjectResult<SP_gettopsalepersonDaily_Result> SP_gettopsalepersonDaily()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_gettopsalepersonDaily_Result>("SP_gettopsalepersonDaily");
        }
    
        public virtual ObjectResult<SP_gettopsalepersonMonthly_Result> SP_gettopsalepersonMonthly()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_gettopsalepersonMonthly_Result>("SP_gettopsalepersonMonthly");
        }
    
        public virtual ObjectResult<SP_gettopsalepersonYearly_Result> SP_gettopsalepersonYearly()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_gettopsalepersonYearly_Result>("SP_gettopsalepersonYearly");
        }
    
        public virtual ObjectResult<SP_GetWeeklyIncentive_Result> SP_GetWeeklyIncentive(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> salePersonNo)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var salePersonNoParameter = salePersonNo.HasValue ?
                new ObjectParameter("salePersonNo", salePersonNo) :
                new ObjectParameter("salePersonNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetWeeklyIncentive_Result>("SP_GetWeeklyIncentive", startDateParameter, endDateParameter, salePersonNoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_GetWeeklySaleforMonthlychart(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_GetWeeklySaleforMonthlychart", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_GetYesterdaystockupdate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_GetYesterdaystockupdate");
        }
    
        public virtual ObjectResult<Nullable<int>> SP_GetYesterdaystockupdatechartDaily()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_GetYesterdaystockupdatechartDaily");
        }
    
        public virtual int SP_Importstock()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Importstock");
        }
    
        public virtual ObjectResult<SP_ProductPerformancebetweendate_Result> SP_ProductPerformancebetweendate(Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate)
        {
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("Startdate", startdate) :
                new ObjectParameter("Startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("Enddate", enddate) :
                new ObjectParameter("Enddate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ProductPerformancebetweendate_Result>("SP_ProductPerformancebetweendate", startdateParameter, enddateParameter);
        }
    
        public virtual int Sp_pvtlblincentivereportapi(Nullable<int> qtrno, string finyear)
        {
            var qtrnoParameter = qtrno.HasValue ?
                new ObjectParameter("qtrno", qtrno) :
                new ObjectParameter("qtrno", typeof(int));
    
            var finyearParameter = finyear != null ?
                new ObjectParameter("finyear", finyear) :
                new ObjectParameter("finyear", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_pvtlblincentivereportapi", qtrnoParameter, finyearParameter);
        }
    
        public virtual ObjectResult<Sp_pvtlblincentivereportapi2_Result> Sp_pvtlblincentivereportapi2(Nullable<int> qtrno, string finyear)
        {
            var qtrnoParameter = qtrno.HasValue ?
                new ObjectParameter("qtrno", qtrno) :
                new ObjectParameter("qtrno", typeof(int));
    
            var finyearParameter = finyear != null ?
                new ObjectParameter("finyear", finyear) :
                new ObjectParameter("finyear", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_pvtlblincentivereportapi2_Result>("Sp_pvtlblincentivereportapi2", qtrnoParameter, finyearParameter);
        }
    
        public virtual ObjectResult<SP_ReportTop20CustomerOfQuarter_Result> SP_ReportTop20CustomerOfQuarter(Nullable<System.DateTime> quarterstartDate, Nullable<System.DateTime> quarterEndDate)
        {
            var quarterstartDateParameter = quarterstartDate.HasValue ?
                new ObjectParameter("QuarterstartDate", quarterstartDate) :
                new ObjectParameter("QuarterstartDate", typeof(System.DateTime));
    
            var quarterEndDateParameter = quarterEndDate.HasValue ?
                new ObjectParameter("QuarterEndDate", quarterEndDate) :
                new ObjectParameter("QuarterEndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ReportTop20CustomerOfQuarter_Result>("SP_ReportTop20CustomerOfQuarter", quarterstartDateParameter, quarterEndDateParameter);
        }
    
        public virtual ObjectResult<SP_saleupdatechart_Result> SP_saleupdatechart(Nullable<System.DateTime> saledate)
        {
            var saledateParameter = saledate.HasValue ?
                new ObjectParameter("saledate", saledate) :
                new ObjectParameter("saledate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_saleupdatechart_Result>("SP_saleupdatechart", saledateParameter);
        }
    
        public virtual int SP_setUsertoken(string imei, string token, string version)
        {
            var imeiParameter = imei != null ?
                new ObjectParameter("Imei", imei) :
                new ObjectParameter("Imei", typeof(string));
    
            var tokenParameter = token != null ?
                new ObjectParameter("token", token) :
                new ObjectParameter("token", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_setUsertoken", imeiParameter, tokenParameter, versionParameter);
        }
    
        public virtual ObjectResult<SP_Top20CustomerOfQuarterReport_Result> SP_Top20CustomerOfQuarterReport(Nullable<System.DateTime> quarterstartDate, Nullable<System.DateTime> quarterEndDate)
        {
            var quarterstartDateParameter = quarterstartDate.HasValue ?
                new ObjectParameter("QuarterstartDate", quarterstartDate) :
                new ObjectParameter("QuarterstartDate", typeof(System.DateTime));
    
            var quarterEndDateParameter = quarterEndDate.HasValue ?
                new ObjectParameter("QuarterEndDate", quarterEndDate) :
                new ObjectParameter("QuarterEndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Top20CustomerOfQuarterReport_Result>("SP_Top20CustomerOfQuarterReport", quarterstartDateParameter, quarterEndDateParameter);
        }
    
        public virtual ObjectResult<SP_TopSalePersonDashboard_Result> SP_TopSalePersonDashboard(Nullable<System.DateTime> saledate)
        {
            var saledateParameter = saledate.HasValue ?
                new ObjectParameter("saledate", saledate) :
                new ObjectParameter("saledate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_TopSalePersonDashboard_Result>("SP_TopSalePersonDashboard", saledateParameter);
        }
    
        public virtual ObjectResult<SP_TopSalePersonDashboardChart_Result> SP_TopSalePersonDashboardChart(Nullable<System.DateTime> saledate)
        {
            var saledateParameter = saledate.HasValue ?
                new ObjectParameter("saledate", saledate) :
                new ObjectParameter("saledate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_TopSalePersonDashboardChart_Result>("SP_TopSalePersonDashboardChart", saledateParameter);
        }
    
        public virtual ObjectResult<string> SP_Vendoravailabesite(Nullable<System.DateTime> saledate)
        {
            var saledateParameter = saledate.HasValue ?
                new ObjectParameter("Saledate", saledate) :
                new ObjectParameter("Saledate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_Vendoravailabesite", saledateParameter);
        }
    
        public virtual ObjectResult<string> SP_Vendoravailabesiteformonth(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_Vendoravailabesiteformonth", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<SP_VendorTemplateDaywiseComparisionofsale_Result> SP_VendorTemplateDaywiseComparisionofsale(string siteCuid, Nullable<System.DateTime> saleDate)
        {
            var siteCuidParameter = siteCuid != null ?
                new ObjectParameter("SiteCuid", siteCuid) :
                new ObjectParameter("SiteCuid", typeof(string));
    
            var saleDateParameter = saleDate.HasValue ?
                new ObjectParameter("SaleDate", saleDate) :
                new ObjectParameter("SaleDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_VendorTemplateDaywiseComparisionofsale_Result>("SP_VendorTemplateDaywiseComparisionofsale", siteCuidParameter, saleDateParameter);
        }
    
        public virtual ObjectResult<SP_VendorTemplateDaywiseComparisionofsaleLastdate_Result> SP_VendorTemplateDaywiseComparisionofsaleLastdate(string siteCuid, Nullable<System.DateTime> saleDate, string brandName)
        {
            var siteCuidParameter = siteCuid != null ?
                new ObjectParameter("SiteCuid", siteCuid) :
                new ObjectParameter("SiteCuid", typeof(string));
    
            var saleDateParameter = saleDate.HasValue ?
                new ObjectParameter("SaleDate", saleDate) :
                new ObjectParameter("SaleDate", typeof(System.DateTime));
    
            var brandNameParameter = brandName != null ?
                new ObjectParameter("brandName", brandName) :
                new ObjectParameter("brandName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_VendorTemplateDaywiseComparisionofsaleLastdate_Result>("SP_VendorTemplateDaywiseComparisionofsaleLastdate", siteCuidParameter, saleDateParameter, brandNameParameter);
        }
    
        public virtual ObjectResult<SP_VendorTemplateDaywiseComparisionofsalemonthsummary_Result> SP_VendorTemplateDaywiseComparisionofsalemonthsummary(string siteCuid, string brandName, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var siteCuidParameter = siteCuid != null ?
                new ObjectParameter("SiteCuid", siteCuid) :
                new ObjectParameter("SiteCuid", typeof(string));
    
            var brandNameParameter = brandName != null ?
                new ObjectParameter("brandName", brandName) :
                new ObjectParameter("brandName", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_VendorTemplateDaywiseComparisionofsalemonthsummary_Result>("SP_VendorTemplateDaywiseComparisionofsalemonthsummary", siteCuidParameter, brandNameParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<string> SP_VendorTemplateGetVendorBrand(Nullable<int> vendorId)
        {
            var vendorIdParameter = vendorId.HasValue ?
                new ObjectParameter("VendorId", vendorId) :
                new ObjectParameter("VendorId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_VendorTemplateGetVendorBrand", vendorIdParameter);
        }
    
        public virtual ObjectResult<SP_VendorTemplateweeklysalereport_Result> SP_VendorTemplateweeklysalereport(string siteCuid, string brandName, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var siteCuidParameter = siteCuid != null ?
                new ObjectParameter("SiteCuid", siteCuid) :
                new ObjectParameter("SiteCuid", typeof(string));
    
            var brandNameParameter = brandName != null ?
                new ObjectParameter("brandName", brandName) :
                new ObjectParameter("brandName", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_VendorTemplateweeklysalereport_Result>("SP_VendorTemplateweeklysalereport", siteCuidParameter, brandNameParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<SP_GetpspfddetailreportmonthwithSite_Result> SP_GetpspfddetailreportmonthwithSite(string site, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var siteParameter = site != null ?
                new ObjectParameter("Site", site) :
                new ObjectParameter("Site", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetpspfddetailreportmonthwithSite_Result>("SP_GetpspfddetailreportmonthwithSite", siteParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<SP_GetsellthroughstockDetailsdivision_Result> SP_GetsellthroughstockDetailsdivision(Nullable<int> division, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var divisionParameter = division.HasValue ?
                new ObjectParameter("Division", division) :
                new ObjectParameter("Division", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetsellthroughstockDetailsdivision_Result>("SP_GetsellthroughstockDetailsdivision", divisionParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<SP_GetsellthroughstockDetailswithsite_Result> SP_GetsellthroughstockDetailswithsite(Nullable<int> siteId, Nullable<int> division, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var siteIdParameter = siteId.HasValue ?
                new ObjectParameter("SiteId", siteId) :
                new ObjectParameter("SiteId", typeof(int));
    
            var divisionParameter = division.HasValue ?
                new ObjectParameter("Division", division) :
                new ObjectParameter("Division", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetsellthroughstockDetailswithsite_Result>("SP_GetsellthroughstockDetailswithsite", siteIdParameter, divisionParameter, startDateParameter, endDateParameter);
        }
    }
}
